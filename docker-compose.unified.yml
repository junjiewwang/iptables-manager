version: '3.8'

services:
  # 统一的应用服务（前端+后端）
  app:
    build:
      context: .
      dockerfile: Dockerfile.unified
    container_name: iptables-management-app
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=iptables_user
      - DB_PASSWORD=iptables_pass
      - DB_NAME=iptables_management
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - GIN_MODE=release
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - iptables-network
    restart: unless-stopped
    volumes:
      - app-logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: iptables-management-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root123456
      - MYSQL_DATABASE=iptables_management
      - MYSQL_USER=iptables_user
      - MYSQL_PASSWORD=iptables_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - iptables-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot123456"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --max-connections=200

networks:
  iptables-network:
    driver: bridge
    name: iptables-management-network

volumes:
  mysql-data:
    name: iptables-management-mysql-data
  app-logs:
    name: iptables-management-app-logs